package com.github.aoclib.utils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Paths;

public class DayGenerator {
	
	
	/**
	 * The default solver for a specific day looks like this.
	 */
	static String dayTemplate = """
			package solutions.year%d;
			
			import java.util.List;

			import com.github.aoclib.api.InputParser;
			import com.github.aoclib.solver.DayX;

			/**
			 * <p>AUTOGENERATED BY DayGenerator.java</p>
			 *
			 * <p>https://github.com/vilhok/aoc-lib</p>
			 *
			 * <p>Edits in this file will not be overwritten.</p>
			 *
			 */
			public class Year%dDay%s extends DayX {

				@Override
				public Object firstPart(InputParser input) {
					return NOT_SOLVED;
				}

				@Override
				public Object secondPart(InputParser input) {
					return NOT_SOLVED;
				}

				/*
				 * Optional: add tests for each part in the following methods
				 *
				 * These methods have blank implementations in superclass as well and can be deleted if you
				 * don't want to include tests.
				 *
				 * Add test as follows:
				 *
				 * new Test("sampleinput", expectedSolution);
				 *
				 * Collect the tests from the task web page.
				 */

				@Override
				protected void insertTestsPart1(List<Test> tests) {

				}

				@Override
				protected void insertTestsPart2(List<Test> tests) {

				}
			}
			""";


	/**
	 * Generates a single boilerplate source code file.
	 * 
	 * @param year
	 * @param day
	 * @throws IOException
	 */
	public static void generate(int year, int day) throws IOException {
		String dir = "year" + year;
		File f = Paths.get("src/solutions", dir).toFile();
		if (!f.exists()) {
			f.mkdirs();
		}
		String dayStr = "" + day;
		if (dayStr.length() == 1) {
			dayStr = "0" + dayStr;
		}
		String cname = "Year" + year + "Day" + dayStr;
		System.out.println(cname);
		System.out.println(dayStr);
		String s = String.format(dayTemplate, year, year, dayStr);
		System.out.println(s);
		File target = Paths.get("src", "solutions", dir, cname + ".java").toFile();
		if (target.exists()) {
			System.err.println("Did not generate file" + target.getAbsolutePath());
			System.err.println("Target file already exists");
			return;
		}else {
			System.err.println("Generated file in: " +target.getAbsolutePath());
		}
		FileWriter fw = new FileWriter(target);

		fw.write(s);
		fw.close();

	}

}
